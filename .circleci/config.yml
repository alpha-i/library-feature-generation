#machine:
#  post:
#    - wget https://repo.continuum.io/miniconda/Miniconda3-4.2.11-Linux-x86_64.sh -O ~/miniconda.sh
#    - bash ~/miniconda.sh -b -p $HOME/miniconda
#    - echo 'PATH="$HOME/miniconda/bin:$PATH"' >> .bashrc
#
#dependencies:
#  pre:
#    - conda install --yes pip
#    - pip install --upgrade pip
#    - pip install -U setuptools --ignore-installed
#  override:
#    - pip install -r dev-requirements.txt
#
#test:
#  override:
#    - PYTHONPATH=. pytest --cov=feature-generation --cov-report html:$CIRCLE_ARTIFACTS tests/
#


# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.5.4

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "dev-requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r dev-requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "dev-requirements.txt" }}

      # run tests!
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            PYTHONPATH=. pytest --cov=feature-generation --cov-report

      - store_artifacts:
          path: test-reports
          destination: test-reports